{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","type","placeholder","onChange","changeHandler","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,wBCGFA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBACAC,IAAM,UACNC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACH,mCAAQL,EAAMI,QAAQE,YCJjBC,EAAW,SAAAP,GAAK,OACxB,qBAAKC,UAAY,YAAjB,SACAD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCJhBK,G,MAAY,SAAAV,GAAK,OAC1B,uBACAC,UAAY,SACZU,KAAO,SACPC,YAAcZ,EAAMY,YACpBC,SAAYb,EAAMc,kBCoCPC,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFD,cAAgB,SAACE,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQE,KAAKwB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK7B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACEW,YAAc,kBACdE,cAAiBa,KAAKb,gBAGtB,cAAC,EAAD,CAAUN,SAAaoB,W,GAhCbI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bd667ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className = 'card-container'>\n        <img \n        alt = 'monster' \n        src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h1 > { props.monster.name }</h1>\n    </div>\n\n\n\n)","import React from 'react';\nimport './card-list.styles.css';\nimport { Card }  from '../card/card.component';\n\nexport const CardList = props =>  (\n     <div className = 'card-list'>\n    {props.monsters.map(monster => (\n        <Card key = {monster.id} monster = {monster} />\n    ))}\n    </div>\n);\n","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = props => (\n    <input \n    className = 'search'\n    type = 'search'\n    placeholder={ props.placeholder } \n    onChange= { props.changeHandler }>\n    </input>\n\n\n\n);","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [ ],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  changeHandler = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder = 'search monsters' \n        changeHandler = {this.changeHandler}\n        >\n        </SearchBox>\n        <CardList monsters = { filteredMonsters }  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}